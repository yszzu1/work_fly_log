在命令中含有$ \ 时使用${}更好，使用``可能会有bug,结果与希望不一致
使用“”时 echo $@ 与 echo "$@"是不同的

time xxxx统计命令的执行时间

watch xxxx每几秒自动执行一个命令或脚本  

shell调试显示行号
export PS4='+{$LINENO:$FUNCNAME} '

数组操作取里面的随机取值  
        local tx=$((($length+1)/3))
        ipList[0]=`echo ${allIp[@]:0:$tx} | tr ' ' '\n\r' | shuf -n1`  
        ipList[1]=`echo ${allIp[@]:$tx:$tx} | tr ' ' '\n\r' | shuf -n1`  
        ipList[2]=`echo ${allIp[@]:2*$tx} | tr ' ' '\n\r' | shuf -n1`  
        
命令的并发运行, 使用 &作为后台任务运行，然后使用wait来等待结束 



创建固定大小的文件
dd if=/dev/zero of=hello.txt bs=100M count=1

查找大文件
find / -size +1G -exec ls -lh {} \;
du -h /* | awk '$1 ~/(^.G|..G|...G)/'



cat aa | sed 's/a/b/g' > aa 不管文件里的内容是什么都会清空这个文件  
cat aa | sed 's/a/b/g' >> aa 追加却不会清空文件 使用strace并没有看出来什么区别
修改文件内容应该使用sed -i 


给所有已登录人发消息
echo "We are shutting down in 1 hour" | wall

 为什么？清空一个文件的标准写法是前面有个：
: > alwayszero.file

查看文件被哪个进程打开
fuser -v /var/log/mail.log
进程是由哪个文件运行起来的
lsof -p -i

数字转换成十六进制  
printf '%x' 165154  


set -m ，关闭监控，shell中的进程管理，信号量的传播



shell快捷键在/etc/inputrc或者~/.inputrc中定义，修改后使用Ctrl x或者Ctrl r或者bind -f ~/.inputrc或者bash -l重新加载
```
# alternate mappings for "page up" and "page down" to search the history
"\e[5~": history-search-backward
"\e[6~": history-search-forward
```
